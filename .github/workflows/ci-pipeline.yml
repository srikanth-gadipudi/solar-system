name: node js ci pipeline
on:
  push:
    branches: 
        - main
        - 'feature/*'
  pull_request:
    branches:
        - main

  workflow_dispatch:
    inputs:
        logLevel:
            description: 'Log level'
            required: true
            default: 'warning'
            type: choice
            options:
            - info
            - warning
            - debug
        tags:
            description: 'Test scenario tags'
            required: false
            type: boolean
env:
    MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}


jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js version 18
              uses: actions/setup-node@v3
              with:
                node-version: 18

            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: node_modules
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
            
            - name: npm install and build
              run: npm install
            - name: run npm test
              id: generate-test-result
              run: npm run test

            - name: archive test artifact 
              uses: actions/upload-artifact@v3
              if: always()
          
              with:
                path: test-results.xml
                name: test-result-artifact

    code-coverage:
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js version 18
              uses: actions/setup-node@v3
              with:
                node-version: 18
            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: node_modules
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
              
            - name: npm install and build
              run: npm install

            - name: run npm coverage
              run: npm run coverage
            
            - name : archive coverage artifact 
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: coverage-artifact
                path: coverage
                retention-days: 5

            


