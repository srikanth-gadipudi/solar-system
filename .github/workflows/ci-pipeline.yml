name: node js ci pipeline
on:
  push:
    branches: 
        - main
  pull_request:
    branches:
        - main
  workflow_dispatch:
    inputs:
        logLevel:
            description: 'Log level'
            required: true
            default: 'warning'
            type: choice
            options:
            - info
            - warning
            - debug
        tags:
            description: 'Test scenario tags'
            required: false
            type: boolean
env:
    MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: set up and install nodejs
              uses: ./.github/actions/node-js-install

 
            - name: run npm test
              id: generate-test-result
              run: npm run test
            - name: archive test artifact 
              uses: actions/upload-artifact@v3
              if: always()
              with:
                path: test-results.xml
                name: test-result-artifact-18-ubuntu 
                retention-days: 5

    code-coverage:
        runs-on: ubuntu-latest

        needs: [build]
        steps:
            - uses: actions/checkout@v2
            - name: set up and install nodejs
              uses: ./.github/actions/node-js-install
              

            - name: run npm coverage
              run: npm run coverage
            - name: archive coverage artifact 
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: coverage-artifact-18-ubuntu
                path: coverage
                retention-days: 5
      
    Build-docker-image:
      runs-on: ubuntu-latest
      needs: [build, code-coverage]
      permissions:
        contents: read
        packages: write
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: login to docker hub 
          uses: docker/login-action@v2
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ vars.DOCKERHUB_TOKEN }}
        - name: login to GHCR
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build docker image
          uses: docker/build-push-action@v6
          with:
            push: false
            context: .
            tags: |
              ${{ vars.DOCKER_USERNAME }}/solar-system:latest
              ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.run_number }}
              ghcr.io/${{ github.repository_owner }}/solar-system:latest
              ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.run_number }}
        - name: run docker image and test 
          run: |
              docker run --name=solar-system -d -p 3000:3000 \
                  -e MONGO_URI=${{ env.MONGO_URI }} \
                  -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
                  -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
                  ${{ vars.DOCKER_USERNAME }}/solar-system:latest
              export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system)
              echo $IP
              echo checking container healthcheck using wget
              wget -q -O - 127.0.0.1:3000/live
        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            push: true
            context: .
            tags: |
              ${{ vars.DOCKER_USERNAME }}/solar-system:latest
              ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.run_number }}
              ghcr.io/${{ github.repository_owner }}/solar-system:latest
              ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.run_number }}
        - name: cleanup all the docker images
          run: docker rmi -f solar-system:${{ github.run_number }} ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.run_number }}

